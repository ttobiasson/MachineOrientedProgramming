
./Debug/graphicdisplay.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
#define STK_VAL  ((volatile unsigned int*)(0xE000E018))
void startup(void) __attribute__((naked)) __attribute__((section (".start_section")) );

void startup ( void )
{
asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
20000002:	4685      	mov	sp, r0
20000004:	f000 f8d1 	bl	200001aa <main>
20000008:	e7fe      	b.n	20000008 <startup+0x8>
	" LDR R0,=0x2001C000\n"		/* set stack */
	" MOV SP,R0\n"
	" BL main\n"				/* call main */
	".L1: B .L1\n"				/* never return */
	) ;
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <delay_250ns>:
void delay_250ns(void){
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
    *STK_CTRL = 0;
20000014:	4b0c      	ldr	r3, [pc, #48]	; (20000048 <delay_250ns+0x38>)
20000016:	2200      	movs	r2, #0
20000018:	601a      	str	r2, [r3, #0]
    *STK_LOAD = ((168/4)-1);
2000001a:	4b0c      	ldr	r3, [pc, #48]	; (2000004c <delay_250ns+0x3c>)
2000001c:	2229      	movs	r2, #41	; 0x29
2000001e:	601a      	str	r2, [r3, #0]
    *STK_VAL  = 0;
20000020:	4b0b      	ldr	r3, [pc, #44]	; (20000050 <delay_250ns+0x40>)
20000022:	2200      	movs	r2, #0
20000024:	601a      	str	r2, [r3, #0]
    *STK_CTRL = 5;
20000026:	4b08      	ldr	r3, [pc, #32]	; (20000048 <delay_250ns+0x38>)
20000028:	2205      	movs	r2, #5
2000002a:	601a      	str	r2, [r3, #0]
    while( (*STK_CTRL & 0x10000)== 0){}
2000002c:	46c0      	nop			; (mov r8, r8)
2000002e:	4b06      	ldr	r3, [pc, #24]	; (20000048 <delay_250ns+0x38>)
20000030:	681a      	ldr	r2, [r3, #0]
20000032:	2380      	movs	r3, #128	; 0x80
20000034:	025b      	lsls	r3, r3, #9
20000036:	4013      	ands	r3, r2
20000038:	d0f9      	beq.n	2000002e <delay_250ns+0x1e>
    *STK_CTRL = 0;
2000003a:	4b03      	ldr	r3, [pc, #12]	; (20000048 <delay_250ns+0x38>)
2000003c:	2200      	movs	r2, #0
2000003e:	601a      	str	r2, [r3, #0]
}
20000040:	46c0      	nop			; (mov r8, r8)
20000042:	46bd      	mov	sp, r7
20000044:	bd80      	pop	{r7, pc}
20000046:	46c0      	nop			; (mov r8, r8)
20000048:	e000e010 	and	lr, r0, r0, lsl r0
2000004c:	e000e014 	and	lr, r0, r4, lsl r0
20000050:	e000e018 	and	lr, r0, r8, lsl r0

20000054 <delay_500ns>:
void delay_500ns(void){
20000054:	b580      	push	{r7, lr}
20000056:	af00      	add	r7, sp, #0
	delay_250ns();
20000058:	f7ff ffda 	bl	20000010 <delay_250ns>
	delay_250ns();
2000005c:	f7ff ffd8 	bl	20000010 <delay_250ns>
}
20000060:	46c0      	nop			; (mov r8, r8)
20000062:	46bd      	mov	sp, r7
20000064:	bd80      	pop	{r7, pc}

20000066 <delay_micro>:
void delay_micro(unsigned int us){
20000066:	b580      	push	{r7, lr}
20000068:	b082      	sub	sp, #8
2000006a:	af00      	add	r7, sp, #0
2000006c:	6078      	str	r0, [r7, #4]
    while(us--){
2000006e:	e007      	b.n	20000080 <delay_micro+0x1a>
        delay_250ns();
20000070:	f7ff ffce 	bl	20000010 <delay_250ns>
        delay_250ns();
20000074:	f7ff ffcc 	bl	20000010 <delay_250ns>
        delay_250ns();
20000078:	f7ff ffca 	bl	20000010 <delay_250ns>
        delay_250ns();
2000007c:	f7ff ffc8 	bl	20000010 <delay_250ns>
    while(us--){
20000080:	687b      	ldr	r3, [r7, #4]
20000082:	1e5a      	subs	r2, r3, #1
20000084:	607a      	str	r2, [r7, #4]
20000086:	2b00      	cmp	r3, #0
20000088:	d1f2      	bne.n	20000070 <delay_micro+0xa>
    }
}
2000008a:	46c0      	nop			; (mov r8, r8)
2000008c:	46bd      	mov	sp, r7
2000008e:	b002      	add	sp, #8
20000090:	bd80      	pop	{r7, pc}

20000092 <delay_milli>:
void delay_milli(unsigned int ms){
20000092:	b580      	push	{r7, lr}
20000094:	b082      	sub	sp, #8
20000096:	af00      	add	r7, sp, #0
20000098:	6078      	str	r0, [r7, #4]
    while(ms--){
2000009a:	e002      	b.n	200000a2 <delay_milli+0x10>
        delay_micro(10);
2000009c:	200a      	movs	r0, #10
2000009e:	f7ff ffe2 	bl	20000066 <delay_micro>
    while(ms--){
200000a2:	687b      	ldr	r3, [r7, #4]
200000a4:	1e5a      	subs	r2, r3, #1
200000a6:	607a      	str	r2, [r7, #4]
200000a8:	2b00      	cmp	r3, #0
200000aa:	d1f7      	bne.n	2000009c <delay_milli+0xa>
    }
    
}
200000ac:	46c0      	nop			; (mov r8, r8)
200000ae:	46bd      	mov	sp, r7
200000b0:	b002      	add	sp, #8
200000b2:	bd80      	pop	{r7, pc}

200000b4 <graphic_ctrl_bit_set>:
typedef unsigned char uint8_t;

void graphic_ctrl_bit_set(uint8_t x){
200000b4:	b580      	push	{r7, lr}
200000b6:	b082      	sub	sp, #8
200000b8:	af00      	add	r7, sp, #0
200000ba:	0002      	movs	r2, r0
200000bc:	1dfb      	adds	r3, r7, #7
200000be:	701a      	strb	r2, [r3, #0]
	*PORT_ODR_LOW |= x;
200000c0:	4b0a      	ldr	r3, [pc, #40]	; (200000ec <graphic_ctrl_bit_set+0x38>)
200000c2:	781b      	ldrb	r3, [r3, #0]
200000c4:	b2da      	uxtb	r2, r3
200000c6:	4909      	ldr	r1, [pc, #36]	; (200000ec <graphic_ctrl_bit_set+0x38>)
200000c8:	1dfb      	adds	r3, r7, #7
200000ca:	781b      	ldrb	r3, [r3, #0]
200000cc:	4313      	orrs	r3, r2
200000ce:	b2db      	uxtb	r3, r3
200000d0:	700b      	strb	r3, [r1, #0]
	*PORT_ODR_LOW &= ~(1UL << 2);
200000d2:	4b06      	ldr	r3, [pc, #24]	; (200000ec <graphic_ctrl_bit_set+0x38>)
200000d4:	781b      	ldrb	r3, [r3, #0]
200000d6:	b2db      	uxtb	r3, r3
200000d8:	4a04      	ldr	r2, [pc, #16]	; (200000ec <graphic_ctrl_bit_set+0x38>)
200000da:	2104      	movs	r1, #4
200000dc:	438b      	bics	r3, r1
200000de:	b2db      	uxtb	r3, r3
200000e0:	7013      	strb	r3, [r2, #0]

}
200000e2:	46c0      	nop			; (mov r8, r8)
200000e4:	46bd      	mov	sp, r7
200000e6:	b002      	add	sp, #8
200000e8:	bd80      	pop	{r7, pc}
200000ea:	46c0      	nop			; (mov r8, r8)
200000ec:	40021014 	andmi	r1, r2, r4, lsl r0

200000f0 <graphic_ctrl_bit_clear>:
void graphic_ctrl_bit_clear(uint8_t x){
200000f0:	b580      	push	{r7, lr}
200000f2:	b082      	sub	sp, #8
200000f4:	af00      	add	r7, sp, #0
200000f6:	0002      	movs	r2, r0
200000f8:	1dfb      	adds	r3, r7, #7
200000fa:	701a      	strb	r2, [r3, #0]
	*PORT_ODR_LOW &= ~x;
200000fc:	4b0c      	ldr	r3, [pc, #48]	; (20000130 <graphic_ctrl_bit_clear+0x40>)
200000fe:	781b      	ldrb	r3, [r3, #0]
20000100:	b2db      	uxtb	r3, r3
20000102:	b25b      	sxtb	r3, r3
20000104:	1dfa      	adds	r2, r7, #7
20000106:	7812      	ldrb	r2, [r2, #0]
20000108:	b252      	sxtb	r2, r2
2000010a:	43d2      	mvns	r2, r2
2000010c:	b252      	sxtb	r2, r2
2000010e:	4013      	ands	r3, r2
20000110:	b25a      	sxtb	r2, r3
20000112:	4b07      	ldr	r3, [pc, #28]	; (20000130 <graphic_ctrl_bit_clear+0x40>)
20000114:	b2d2      	uxtb	r2, r2
20000116:	701a      	strb	r2, [r3, #0]
	*PORT_ODR_LOW &= ~(1UL << 2);
20000118:	4b05      	ldr	r3, [pc, #20]	; (20000130 <graphic_ctrl_bit_clear+0x40>)
2000011a:	781b      	ldrb	r3, [r3, #0]
2000011c:	b2db      	uxtb	r3, r3
2000011e:	4a04      	ldr	r2, [pc, #16]	; (20000130 <graphic_ctrl_bit_clear+0x40>)
20000120:	2104      	movs	r1, #4
20000122:	438b      	bics	r3, r1
20000124:	b2db      	uxtb	r3, r3
20000126:	7013      	strb	r3, [r2, #0]


}
20000128:	46c0      	nop			; (mov r8, r8)
2000012a:	46bd      	mov	sp, r7
2000012c:	b002      	add	sp, #8
2000012e:	bd80      	pop	{r7, pc}
20000130:	40021014 	andmi	r1, r2, r4, lsl r0

20000134 <select_controller>:
void select_controller(uint8_t controller){
20000134:	b580      	push	{r7, lr}
20000136:	b082      	sub	sp, #8
20000138:	af00      	add	r7, sp, #0
2000013a:	0002      	movs	r2, r0
2000013c:	1dfb      	adds	r3, r7, #7
2000013e:	701a      	strb	r2, [r3, #0]
	switch(controller){
20000140:	1dfb      	adds	r3, r7, #7
20000142:	781b      	ldrb	r3, [r3, #0]
20000144:	2b01      	cmp	r3, #1
20000146:	d01d      	beq.n	20000184 <select_controller+0x50>
20000148:	dc02      	bgt.n	20000150 <select_controller+0x1c>
2000014a:	2b00      	cmp	r3, #0
2000014c:	d005      	beq.n	2000015a <select_controller+0x26>
		graphic_ctrl_bit_set(B_CS2);
		break;
	}
		
	
}
2000014e:	e020      	b.n	20000192 <select_controller+0x5e>
	switch(controller){
20000150:	2b08      	cmp	r3, #8
20000152:	d009      	beq.n	20000168 <select_controller+0x34>
20000154:	2b10      	cmp	r3, #16
20000156:	d00e      	beq.n	20000176 <select_controller+0x42>
}
20000158:	e01b      	b.n	20000192 <select_controller+0x5e>
		graphic_ctrl_bit_clear(B_CS1);
2000015a:	2008      	movs	r0, #8
2000015c:	f7ff ffc8 	bl	200000f0 <graphic_ctrl_bit_clear>
		graphic_ctrl_bit_clear(B_CS2);
20000160:	2010      	movs	r0, #16
20000162:	f7ff ffc5 	bl	200000f0 <graphic_ctrl_bit_clear>
		break;
20000166:	e014      	b.n	20000192 <select_controller+0x5e>
		graphic_ctrl_bit_set(B_CS1);
20000168:	2008      	movs	r0, #8
2000016a:	f7ff ffa3 	bl	200000b4 <graphic_ctrl_bit_set>
		graphic_ctrl_bit_clear(B_CS2);
2000016e:	2010      	movs	r0, #16
20000170:	f7ff ffbe 	bl	200000f0 <graphic_ctrl_bit_clear>
		break;
20000174:	e00d      	b.n	20000192 <select_controller+0x5e>
		graphic_ctrl_bit_clear(B_CS1);
20000176:	2008      	movs	r0, #8
20000178:	f7ff ffba 	bl	200000f0 <graphic_ctrl_bit_clear>
		graphic_ctrl_bit_set(B_CS2);
2000017c:	2010      	movs	r0, #16
2000017e:	f7ff ff99 	bl	200000b4 <graphic_ctrl_bit_set>
		break;
20000182:	e006      	b.n	20000192 <select_controller+0x5e>
		graphic_ctrl_bit_set(B_CS1);
20000184:	2008      	movs	r0, #8
20000186:	f7ff ff95 	bl	200000b4 <graphic_ctrl_bit_set>
		graphic_ctrl_bit_set(B_CS2);
2000018a:	2010      	movs	r0, #16
2000018c:	f7ff ff92 	bl	200000b4 <graphic_ctrl_bit_set>
		break;
20000190:	46c0      	nop			; (mov r8, r8)
}
20000192:	46c0      	nop			; (mov r8, r8)
20000194:	46bd      	mov	sp, r7
20000196:	b002      	add	sp, #8
20000198:	bd80      	pop	{r7, pc}

2000019a <graphic_wait_ready>:
void graphic_wait_ready(void){
2000019a:	b580      	push	{r7, lr}
2000019c:	af00      	add	r7, sp, #0
	graphic_ctrl_bit_set(B_CS2);
2000019e:	2010      	movs	r0, #16
200001a0:	f7ff ff88 	bl	200000b4 <graphic_ctrl_bit_set>
}
200001a4:	46c0      	nop			; (mov r8, r8)
200001a6:	46bd      	mov	sp, r7
200001a8:	bd80      	pop	{r7, pc}

200001aa <main>:

int main(void){
200001aa:	b580      	push	{r7, lr}
200001ac:	af00      	add	r7, sp, #0
	return 0;
200001ae:	2300      	movs	r3, #0
	
}
200001b0:	0018      	movs	r0, r3
200001b2:	46bd      	mov	sp, r7
200001b4:	bd80      	pop	{r7, pc}
200001b6:	46c0      	nop			; (mov r8, r8)

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	00000149 	andeq	r0, r0, r9, asr #2
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000118 	andeq	r0, r0, r8, lsl r1
  10:	0000c60c 	andeq	ip, r0, ip, lsl #12
  14:	00005000 	andeq	r5, r0, r0
	...
  24:	000d0200 	andeq	r0, sp, r0, lsl #4
  28:	41010000 	mrsmi	r0, (UNDEF: 1)
  2c:	00000030 	andeq	r0, r0, r0, lsr r0
  30:	b8080103 	stmdalt	r8, {r0, r1, r8}
  34:	04000000 	streq	r0, [r0], #-0
  38:	00000113 	andeq	r0, r0, r3, lsl r1
  3c:	004c6801 	subeq	r6, ip, r1, lsl #16
  40:	01aa0000 			; <UNDEFINED> instruction: 0x01aa0000
  44:	000c2000 	andeq	r2, ip, r0
  48:	9c010000 	stcls	0, cr0, [r1], {-0}
  4c:	69050405 	stmdbvs	r5, {r0, r2, sl}
  50:	0600746e 	streq	r7, [r0], -lr, ror #8
  54:	00000093 	muleq	r0, r3, r0
  58:	019a6401 	orrseq	r6, sl, r1, lsl #8
  5c:	00102000 	andseq	r2, r0, r0
  60:	9c010000 	stcls	0, cr0, [r1], {-0}
  64:	0000a607 	andeq	sl, r0, r7, lsl #12
  68:	344e0100 	strbcc	r0, [lr], #-256	; 0xffffff00
  6c:	66200001 	strtvs	r0, [r0], -r1
  70:	01000000 	mrseq	r0, (UNDEF: 0)
  74:	0000889c 	muleq	r0, ip, r8
  78:	00ad0800 	adceq	r0, sp, r0, lsl #16
  7c:	4e010000 	cdpmi	0, 0, cr0, cr1, cr0, {0}
  80:	00000025 	andeq	r0, r0, r5, lsr #32
  84:	00779102 	rsbseq	r9, r7, r2, lsl #2
  88:	00003909 	andeq	r3, r0, r9, lsl #18
  8c:	f0480100 			; <UNDEFINED> instruction: 0xf0480100
  90:	44200000 	strtmi	r0, [r0], #-0
  94:	01000000 	mrseq	r0, (UNDEF: 0)
  98:	0000aa9c 	muleq	r0, ip, sl
  9c:	00780a00 	rsbseq	r0, r8, r0, lsl #20
  a0:	00254801 	eoreq	r4, r5, r1, lsl #16
  a4:	91020000 	mrsls	r0, (UNDEF: 2)
  a8:	90090077 	andls	r0, r9, r7, ror r0
  ac:	01000001 	tsteq	r0, r1
  b0:	0000b443 	andeq	fp, r0, r3, asr #8
  b4:	00003c20 	andeq	r3, r0, r0, lsr #24
  b8:	cc9c0100 	ldfgts	f0, [ip], {0}
  bc:	0a000000 	beq	c4 <startup-0x1fffff3c>
  c0:	43010078 	movwmi	r0, #4216	; 0x1078
  c4:	00000025 	andeq	r0, r0, r5, lsr #32
  c8:	00779102 	rsbseq	r9, r7, r2, lsl #2
  cc:	00002d07 	andeq	r2, r0, r7, lsl #26
  d0:	923b0100 	eorsls	r0, fp, #0, 2
  d4:	22200000 	eorcs	r0, r0, #0
  d8:	01000000 	mrseq	r0, (UNDEF: 0)
  dc:	0000ef9c 	muleq	r0, ip, pc	; <UNPREDICTABLE>
  e0:	736d0a00 	cmnvc	sp, #0, 20
  e4:	ef3b0100 	svc	0x003b0100
  e8:	02000000 	andeq	r0, r0, #0
  ec:	03007491 	movweq	r7, #1169	; 0x491
  f0:	00000704 	andeq	r0, r0, r4, lsl #14
  f4:	ad070000 	stcge	0, cr0, [r7, #-0]
  f8:	01000001 	tsteq	r0, r1
  fc:	00006633 	andeq	r6, r0, r3, lsr r6
 100:	00002c20 	andeq	r2, r0, r0, lsr #24
 104:	199c0100 	ldmibne	ip, {r8}
 108:	0a000001 	beq	114 <startup-0x1ffffeec>
 10c:	01007375 	tsteq	r0, r5, ror r3
 110:	0000ef33 	andeq	lr, r0, r3, lsr pc
 114:	74910200 	ldrvc	r0, [r1], #512	; 0x200
 118:	00150600 	andseq	r0, r5, r0, lsl #12
 11c:	2f010000 	svccs	0x00010000
 120:	20000054 	andcs	r0, r0, r4, asr r0
 124:	00000012 	andeq	r0, r0, r2, lsl r0
 128:	210b9c01 	tstcs	fp, r1, lsl #24
 12c:	01000000 	mrseq	r0, (UNDEF: 0)
 130:	00001027 	andeq	r1, r0, r7, lsr #32
 134:	00004420 	andeq	r4, r0, r0, lsr #8
 138:	0b9c0100 	bleq	fe700540 <main+0xde700396>
 13c:	000001a5 	andeq	r0, r0, r5, lsr #3
 140:	00001e01 	andeq	r1, r0, r1, lsl #28
 144:	000c2000 	andeq	r2, ip, r0
 148:	9c010000 	stcls	0, cr0, [r1], {-0}
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23
  14:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
  18:	0b3b0b3a 	bleq	ec2d08 <startup-0x1f13d2f8>
  1c:	00001349 	andeq	r1, r0, r9, asr #6
  20:	0b002403 	bleq	9034 <startup-0x1fff6fcc>
  24:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  28:	0400000e 	streq	r0, [r0], #-14
  2c:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
  30:	0b3a0e03 	bleq	e83844 <startup-0x1f17c7bc>
  34:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
  38:	01111349 	tsteq	r1, r9, asr #6
  3c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  40:	00194297 	mulseq	r9, r7, r2
  44:	00240500 	eoreq	r0, r4, r0, lsl #10
  48:	0b3e0b0b 	bleq	f82c7c <startup-0x1f07d384>
  4c:	00000803 	andeq	r0, r0, r3, lsl #16
  50:	3f002e06 	svccc	0x00002e06
  54:	3a0e0319 	bcc	380cc0 <startup-0x1fc7f340>
  58:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
  5c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
  60:	96184006 	ldrls	r4, [r8], -r6
  64:	00001942 	andeq	r1, r0, r2, asr #18
  68:	3f012e07 	svccc	0x00012e07
  6c:	3a0e0319 	bcc	380cd8 <startup-0x1fc7f328>
  70:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
  74:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
  78:	96184006 	ldrls	r4, [r8], -r6
  7c:	13011942 	movwne	r1, #6466	; 0x1942
  80:	05080000 	streq	r0, [r8, #-0]
  84:	3a0e0300 	bcc	380c8c <startup-0x1fc7f374>
  88:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  8c:	00180213 	andseq	r0, r8, r3, lsl r2
  90:	012e0900 			; <UNDEFINED> instruction: 0x012e0900
  94:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  98:	0b3b0b3a 	bleq	ec2d88 <startup-0x1f13d278>
  9c:	01111927 	tsteq	r1, r7, lsr #18
  a0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  a4:	01194297 			; <UNDEFINED> instruction: 0x01194297
  a8:	0a000013 	beq	fc <startup-0x1fffff04>
  ac:	08030005 	stmdaeq	r3, {r0, r2}
  b0:	0b3b0b3a 	bleq	ec2da0 <startup-0x1f13d260>
  b4:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
  b8:	2e0b0000 	cdpcs	0, 0, cr0, cr11, cr0, {0}
  bc:	03193f00 	tsteq	r9, #0, 30
  c0:	3b0b3a0e 	blcc	2ce900 <startup-0x1fd31700>
  c4:	1119270b 	tstne	r9, fp, lsl #14
  c8:	40061201 	andmi	r1, r6, r1, lsl #4
  cc:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
  d0:	Address 0x00000000000000d0 is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	000001a6 	andeq	r0, r0, r6, lsr #3
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	200001b6 			; <UNDEFINED> instruction: 0x200001b6
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   4:	00630002 	rsbeq	r0, r3, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	2f010000 	svccs	0x00010000
  1c:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
  20:	6d6f742f 	cfstrdvs	mvd7, [pc, #-188]!	; ffffff6c <main+0xdffffdc2>
  24:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
  28:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
  2c:	572f7374 			; <UNDEFINED> instruction: 0x572f7374
  30:	2f4b524f 	svccs	0x004b524f
  34:	6863614d 	stmdavs	r3!, {r0, r2, r3, r6, r8, sp, lr}^
  38:	4f656e69 	svcmi	0x00656e69
  3c:	6e656972 			; <UNDEFINED> instruction: 0x6e656972
  40:	50646574 	rsbpl	r6, r4, r4, ror r5
  44:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
  48:	696d6d61 	stmdbvs	sp!, {r0, r5, r6, r8, sl, fp, sp, lr}^
  4c:	672f676e 	strvs	r6, [pc, -lr, ror #14]!
  50:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
  54:	69646369 	stmdbvs	r4!, {r0, r3, r5, r6, r8, r9, sp, lr}^
  58:	616c7073 	smcvs	50947	; 0xc703
  5c:	73000079 	movwvc	r0, #121	; 0x79
  60:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
  64:	632e7075 			; <UNDEFINED> instruction: 0x632e7075
  68:	00000100 	andeq	r0, r0, r0, lsl #2
  6c:	02050000 	andeq	r0, r5, #0
  70:	20000000 	andcs	r0, r0, r0
  74:	13011e03 	movwne	r1, #7683	; 0x1e03
  78:	0003025e 	andeq	r0, r3, lr, asr r2
  7c:	05000101 	streq	r0, [r0, #-257]	; 0xfffffeff
  80:	00001002 	andeq	r1, r0, r2
  84:	01260320 			; <UNDEFINED> instruction: 0x01260320
  88:	3d3d3d2f 	ldccc	13, cr3, [sp, #-188]!	; 0xffffff44
  8c:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
  90:	06200601 	strteq	r0, [r0], -r1, lsl #12
  94:	2f9f3d67 	svccs	0x009f3d67
  98:	4b3d2f2f 	blmi	f4bd5c <startup-0x1f0b42a4>
  9c:	2f2f2f21 	svccs	0x002f2f21
  a0:	4b4b5e2a 	blmi	12d7950 <startup-0x1ed286b0>
  a4:	4d5c3b21 	vldrmi	d19, [ip, #-132]	; 0xffffff7c
  a8:	75849167 	strvc	r9, [r4, #359]	; 0x167
  ac:	6785d767 	strvs	sp, [r5, r7, ror #14]
  b0:	74140367 	ldrvc	r0, [r4], #-871	; 0xfffffc99
  b4:	03206c03 			; <UNDEFINED> instruction: 0x03206c03
  b8:	6e034a14 			; <UNDEFINED> instruction: 0x6e034a14
  bc:	223d3d20 	eorscs	r3, sp, #32, 26	; 0x800
  c0:	3d223d3d 	stccc	13, cr3, [r2, #-244]!	; 0xffffff0c
  c4:	3d3d223d 	lfmcc	f2, 4, [sp, #-244]!	; 0xffffff0c
  c8:	3d2f4b24 	vstmdbcc	pc!, {d4-d21}
  cc:	02222f3e 	eoreq	r2, r2, #62, 30	; 0xf8
  d0:	01010003 	tsteq	r1, r3

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
   4:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
   8:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
   c:	6e697500 	cdpvs	5, 6, cr7, cr9, cr0, {0}
  10:	745f3874 	ldrbvc	r3, [pc], #-2164	; 18 <startup-0x1fffffe8>
  14:	6c656400 	cfstrdvs	mvd6, [r5], #-0
  18:	355f7961 	ldrbcc	r7, [pc, #-2401]	; fffff6bf <main+0xdffff515>
  1c:	736e3030 	cmnvc	lr, #48	; 0x30
  20:	6c656400 	cfstrdvs	mvd6, [r5], #-0
  24:	325f7961 	subscc	r7, pc, #1589248	; 0x184000
  28:	736e3035 	cmnvc	lr, #53	; 0x35
  2c:	6c656400 	cfstrdvs	mvd6, [r5], #-0
  30:	6d5f7961 	vldrvs.16	s15, [pc, #-194]	; ffffff76 <main+0xdffffdcc>	; <UNPREDICTABLE>
  34:	696c6c69 	stmdbvs	ip!, {r0, r3, r5, r6, sl, fp, sp, lr}^
  38:	61726700 	cmnvs	r2, r0, lsl #14
  3c:	63696870 	cmnvs	r9, #112, 16	; 0x700000
  40:	7274635f 	rsbsvc	r6, r4, #2080374785	; 0x7c000001
  44:	69625f6c 	stmdbvs	r2!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
  48:	6c635f74 	stclvs	15, cr5, [r3], #-464	; 0xfffffe30
  4c:	00726165 	rsbseq	r6, r2, r5, ror #2
  50:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; ffffff9c <main+0xdffffdf2>
  54:	6f742f65 	svcvs	0x00742f65
  58:	6f442f6d 	svcvs	0x00442f6d
  5c:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
  60:	2f73746e 	svccs	0x0073746e
  64:	4b524f57 	blmi	1493dc8 <startup-0x1eb6c238>
  68:	63614d2f 	cmnvs	r1, #3008	; 0xbc0
  6c:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
  70:	6569724f 	strbvs	r7, [r9, #-591]!	; 0xfffffdb1
  74:	6465746e 	strbtvs	r7, [r5], #-1134	; 0xfffffb92
  78:	676f7250 			; <UNDEFINED> instruction: 0x676f7250
  7c:	6d6d6172 	stfvse	f6, [sp, #-456]!	; 0xfffffe38
  80:	2f676e69 	svccs	0x00676e69
  84:	70617267 	rsbvc	r7, r1, r7, ror #4
  88:	64636968 	strbtvs	r6, [r3], #-2408	; 0xfffff698
  8c:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
  90:	67007961 	strvs	r7, [r0, -r1, ror #18]
  94:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
  98:	775f6369 	ldrbvc	r6, [pc, -r9, ror #6]
  9c:	5f746961 	svcpl	0x00746961
  a0:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
  a4:	65730079 	ldrbvs	r0, [r3, #-121]!	; 0xffffff87
  a8:	7463656c 	strbtvc	r6, [r3], #-1388	; 0xfffffa94
  ac:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
  b0:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; fffffee8 <main+0xdffffd3e>
  b4:	0072656c 	rsbseq	r6, r2, ip, ror #10
  b8:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
  bc:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
  c0:	61686320 	cmnvs	r8, r0, lsr #6
  c4:	682f0072 	stmdavs	pc!, {r1, r4, r5, r6}	; <UNPREDICTABLE>
  c8:	2f656d6f 	svccs	0x00656d6f
  cc:	2f6d6f74 	svccs	0x006d6f74
  d0:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
  d4:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
  d8:	4f572f73 	svcmi	0x00572f73
  dc:	4d2f4b52 	vstmdbmi	pc!, {d4-<overflow reg d44>}
  e0:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
  e4:	724f656e 	subvc	r6, pc, #461373440	; 0x1b800000
  e8:	746e6569 	strbtvc	r6, [lr], #-1385	; 0xfffffa97
  ec:	72506465 	subsvc	r6, r0, #1694498816	; 0x65000000
  f0:	6172676f 	cmnvs	r2, pc, ror #14
  f4:	6e696d6d 	cdpvs	13, 6, cr6, cr9, cr13, {3}
  f8:	72672f67 	rsbvc	r2, r7, #412	; 0x19c
  fc:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
 100:	73696463 	cmnvc	r9, #1660944384	; 0x63000000
 104:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 108:	6174732f 	cmnvs	r4, pc, lsr #6
 10c:	70757472 	rsbsvc	r7, r5, r2, ror r4
 110:	6d00632e 	stcvs	3, cr6, [r0, #-184]	; 0xffffff48
 114:	006e6961 	rsbeq	r6, lr, r1, ror #18
 118:	20554e47 	subscs	r4, r5, r7, asr #28
 11c:	20313143 	eorscs	r3, r1, r3, asr #2
 120:	2e322e37 	mrccs	14, 1, r2, cr2, cr7, {1}
 124:	30322031 	eorscc	r2, r2, r1, lsr r0
 128:	39303731 	ldmdbcc	r0!, {r0, r4, r5, r8, r9, sl, ip, sp}
 12c:	28203430 	stmdacs	r0!, {r4, r5, sl, ip, sp}
 130:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
 134:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 138:	52415b20 	subpl	r5, r1, #32, 22	; 0x8000
 13c:	6d652f4d 	stclvs	15, cr2, [r5, #-308]!	; 0xfffffecc
 140:	64646562 	strbtvs	r6, [r4], #-1378	; 0xfffffa9e
 144:	372d6465 	strcc	r6, [sp, -r5, ror #8]!
 148:	6172622d 	cmnvs	r2, sp, lsr #4
 14c:	2068636e 	rsbcs	r6, r8, lr, ror #6
 150:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
 154:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 158:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 15c:	5d343032 	ldcpl	0, cr3, [r4, #-200]!	; 0xffffff38
 160:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xfffff2e0
 164:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
 168:	616d2d20 	cmnvs	sp, r0, lsr #26
 16c:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
 170:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
 174:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
 178:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
 17c:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
 180:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
 184:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
 188:	20672d20 	rsbcs	r2, r7, r0, lsr #26
 18c:	00304f2d 	eorseq	r4, r0, sp, lsr #30
 190:	70617267 	rsbvc	r7, r1, r7, ror #4
 194:	5f636968 	svcpl	0x00636968
 198:	6c727463 	cfldrdvs	mvd7, [r2], #-396	; 0xfffffe74
 19c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
 1a0:	7465735f 	strbtvc	r7, [r5], #-863	; 0xfffffca1
 1a4:	61747300 	cmnvs	r4, r0, lsl #6
 1a8:	70757472 	rsbsvc	r7, r5, r2, ror r4
 1ac:	6c656400 	cfstrdvs	mvd6, [r5], #-0
 1b0:	6d5f7961 	vldrvs.16	s15, [pc, #-194]	; f6 <startup-0x1fffff0a>	; <UNPREDICTABLE>
 1b4:	6f726369 	svcvs	0x00726369
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d37 	eorscc	r2, r2, r7, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3720 	eorcc	r3, lr, #32, 14	; 0x800000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	30373130 	eorscc	r3, r7, r0, lsr r1
  48:	20343039 	eorscs	r3, r4, r9, lsr r0
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	652f4d52 	strvs	r4, [pc, #-3410]!	; fffff30e <main+0xdffff164>
  5c:	6465626d 	strbtvs	r6, [r5], #-621	; 0xfffffd93
  60:	2d646564 	cfstr64cs	mvdx6, [r4, #-400]!	; 0xfffffe70
  64:	72622d37 	rsbvc	r2, r2, #3520	; 0xdc0
  68:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  6c:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  70:	6f697369 	svcvs	0x00697369
  74:	3532206e 	ldrcc	r2, [r2, #-110]!	; 0xffffff92
  78:	34303235 	ldrtcc	r3, [r0], #-565	; 0xfffffdcb
  7c:	Address 0x000000000000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x0000000000000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000044 	andeq	r0, r0, r4, asr #32
  30:	40080e41 	andmi	r0, r8, r1, asr #28
  34:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  38:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  3c:	00000018 	andeq	r0, r0, r8, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	20000054 	andcs	r0, r0, r4, asr r0
  48:	00000012 	andeq	r0, r0, r2, lsl r0
  4c:	40080e41 	andmi	r0, r8, r1, asr #28
  50:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  54:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  58:	0000001c 	andeq	r0, r0, ip, lsl r0
  5c:	00000000 	andeq	r0, r0, r0
  60:	20000066 	andcs	r0, r0, r6, rrx
  64:	0000002c 	andeq	r0, r0, ip, lsr #32
  68:	40080e41 	andmi	r0, r8, r1, asr #28
  6c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  70:	100e4101 	andne	r4, lr, r1, lsl #2
  74:	00070d41 	andeq	r0, r7, r1, asr #26
  78:	0000001c 	andeq	r0, r0, ip, lsl r0
  7c:	00000000 	andeq	r0, r0, r0
  80:	20000092 	mulcs	r0, r2, r0
  84:	00000022 	andeq	r0, r0, r2, lsr #32
  88:	40080e41 	andmi	r0, r8, r1, asr #28
  8c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  90:	100e4101 	andne	r4, lr, r1, lsl #2
  94:	00070d41 	andeq	r0, r7, r1, asr #26
  98:	0000001c 	andeq	r0, r0, ip, lsl r0
  9c:	00000000 	andeq	r0, r0, r0
  a0:	200000b4 	strhcs	r0, [r0], -r4
  a4:	0000003c 	andeq	r0, r0, ip, lsr r0
  a8:	40080e41 	andmi	r0, r8, r1, asr #28
  ac:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  b0:	100e4101 	andne	r4, lr, r1, lsl #2
  b4:	00070d41 	andeq	r0, r7, r1, asr #26
  b8:	0000001c 	andeq	r0, r0, ip, lsl r0
  bc:	00000000 	andeq	r0, r0, r0
  c0:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
  c4:	00000044 	andeq	r0, r0, r4, asr #32
  c8:	40080e41 	andmi	r0, r8, r1, asr #28
  cc:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  d0:	100e4101 	andne	r4, lr, r1, lsl #2
  d4:	00070d41 	andeq	r0, r7, r1, asr #26
  d8:	0000001c 	andeq	r0, r0, ip, lsl r0
  dc:	00000000 	andeq	r0, r0, r0
  e0:	20000134 	andcs	r0, r0, r4, lsr r1
  e4:	00000066 	andeq	r0, r0, r6, rrx
  e8:	40080e41 	andmi	r0, r8, r1, asr #28
  ec:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  f0:	100e4101 	andne	r4, lr, r1, lsl #2
  f4:	00070d41 	andeq	r0, r7, r1, asr #26
  f8:	00000018 	andeq	r0, r0, r8, lsl r0
  fc:	00000000 	andeq	r0, r0, r0
 100:	2000019a 	mulcs	r0, sl, r1
 104:	00000010 	andeq	r0, r0, r0, lsl r0
 108:	40080e41 	andmi	r0, r8, r1, asr #28
 10c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 110:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 114:	00000018 	andeq	r0, r0, r8, lsl r0
 118:	00000000 	andeq	r0, r0, r0
 11c:	200001aa 	andcs	r0, r0, sl, lsr #3
 120:	0000000c 	andeq	r0, r0, ip
 124:	40080e41 	andmi	r0, r8, r1, asr #28
 128:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 12c:	070d4101 	streq	r4, [sp, -r1, lsl #2]
